(function (factory) {
    if (typeof module === 'object' && typeof module.exports === 'object') {
        var v = factory(require, exports); if (v !== undefined) module.exports = v;
    }
    else if (typeof define === 'function' && define.amd) {
        define(["require", "exports", './parser/htmlParser', './services/htmlCompletion', './services/htmlFormatter', './services/htmlLinks', './services/htmlHighlighting', 'vscode-languageserver-types'], factory);
    }
})(function (require, exports) {
    /*---------------------------------------------------------------------------------------------
     *  Copyright (c) Microsoft Corporation. All rights reserved.
     *  Licensed under the MIT License. See License.txt in the project root for license information.
     *--------------------------------------------------------------------------------------------*/
    'use strict';
    var htmlParser_1 = require('./parser/htmlParser');
    var htmlCompletion_1 = require('./services/htmlCompletion');
    var htmlFormatter_1 = require('./services/htmlFormatter');
    var htmlLinks_1 = require('./services/htmlLinks');
    var htmlHighlighting_1 = require('./services/htmlHighlighting');
    var vscode_languageserver_types_1 = require('vscode-languageserver-types');
    exports.TextDocument = vscode_languageserver_types_1.TextDocument;
    exports.Position = vscode_languageserver_types_1.Position;
    exports.CompletionItem = vscode_languageserver_types_1.CompletionItem;
    exports.CompletionList = vscode_languageserver_types_1.CompletionList;
    exports.Range = vscode_languageserver_types_1.Range;
    exports.SymbolInformation = vscode_languageserver_types_1.SymbolInformation;
    exports.Diagnostic = vscode_languageserver_types_1.Diagnostic;
    exports.TextEdit = vscode_languageserver_types_1.TextEdit;
    exports.DocumentHighlight = vscode_languageserver_types_1.DocumentHighlight;
    exports.FormattingOptions = vscode_languageserver_types_1.FormattingOptions;
    exports.MarkedString = vscode_languageserver_types_1.MarkedString;
    exports.DocumentLink = vscode_languageserver_types_1.DocumentLink;
    function getLanguageService() {
        return {
            parseHTMLDocument: function (document) { return htmlParser_1.parse(document.getText()); },
            doComplete: htmlCompletion_1.doComplete,
            format: htmlFormatter_1.format,
            findDocumentHighlights: htmlHighlighting_1.findDocumentHighlights,
            findDocumentLinks: htmlLinks_1.findDocumentLinks
        };
    }
    exports.getLanguageService = getLanguageService;
});
//# sourceMappingURL=htmlLanguageService.js.map