{
  "_args": [
    [
      {
        "raw": "@emmetio/markup-formatters@https://registry.npmjs.org/@emmetio/markup-formatters/-/markup-formatters-0.3.3.tgz",
        "scope": "@emmetio",
        "escapedName": "@emmetio%2fmarkup-formatters",
        "name": "@emmetio/markup-formatters",
        "rawSpec": "https://registry.npmjs.org/@emmetio/markup-formatters/-/markup-formatters-0.3.3.tgz",
        "spec": "https://registry.npmjs.org/@emmetio/markup-formatters/-/markup-formatters-0.3.3.tgz",
        "type": "remote"
      },
      "C:\\dev\\vscode\\extensions\\emmet"
    ]
  ],
  "_from": "@emmetio/markup-formatters@>=0.3.3 <0.4.0",
  "_id": "@emmetio/markup-formatters@0.3.3",
  "_inCache": true,
  "_location": "/@emmetio/markup-formatters",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@emmetio/markup-formatters@https://registry.npmjs.org/@emmetio/markup-formatters/-/markup-formatters-0.3.3.tgz",
    "scope": "@emmetio",
    "escapedName": "@emmetio%2fmarkup-formatters",
    "name": "@emmetio/markup-formatters",
    "rawSpec": "https://registry.npmjs.org/@emmetio/markup-formatters/-/markup-formatters-0.3.3.tgz",
    "spec": "https://registry.npmjs.org/@emmetio/markup-formatters/-/markup-formatters-0.3.3.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/@emmetio/expand-abbreviation"
  ],
  "_resolved": "https://registry.npmjs.org/@emmetio/markup-formatters/-/markup-formatters-0.3.3.tgz",
  "_shasum": "b686c05a9786d4896be64764ff23a5e40daf63dc",
  "_shrinkwrap": null,
  "_spec": "@emmetio/markup-formatters@https://registry.npmjs.org/@emmetio/markup-formatters/-/markup-formatters-0.3.3.tgz",
  "_where": "C:\\dev\\vscode\\extensions\\emmet",
  "author": {
    "name": "Sergey Chikuyonok",
    "email": "serge.che@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/emmetio/markup-formatters/issues"
  },
  "dependencies": {
    "@emmetio/field-parser": "^0.3.0",
    "@emmetio/output-renderer": "^0.1.0"
  },
  "description": "Formats and outputs Emmet abbreviation in different markup languages (HTML, XML, Slim, Pug etc)",
  "devDependencies": {
    "@emmetio/abbreviation": "^0.5.0",
    "@emmetio/output-profile": "^0.1.4",
    "@emmetio/variable-resolver": "^0.1.1",
    "babel-plugin-transform-es2015-modules-commonjs": "^6.18.0",
    "babel-register": "^6.18.0",
    "mocha": "^3.2.0",
    "rollup": "^0.41.1"
  },
  "homepage": "https://github.com/emmetio/markup-formatters#readme",
  "keywords": [
    "emmet",
    "abbreviation",
    "html"
  ],
  "license": "MIT",
  "main": "dist/markup-formatters.cjs.js",
  "module": "dist/markup-formatters.es.js",
  "name": "@emmetio/markup-formatters",
  "optionalDependencies": {},
  "readme": "# Emmet output formatters [![Build Status](https://travis-ci.org/emmetio/markup-formatters.svg?branch=master)](https://travis-ci.org/emmetio/markup-formatters)\n\nA collection of output formatters for Emmet abbreviations. Takes [parsed abbreviation](https://github.com/emmetio/abbreviation) and returns its string representation, formatted according to given [output profile](https://github.com/emmetio/output-profile), in one of supported syntax:\n\n* HTML (including XML and XHTML)\n* HAML\n* Pug\n* Slim\n\n## Bundles\n\nThe default bundle contains all supported syntaxes. If you donâ€™t need all of them and want to cut-down your own bundle size a bit, you can import required formatters directly:\n\n```js\n// import all formatters\nimport format from '@emmetio/markup-formatters';\n\n// import HTML formatter only\nimport html from '@emmetio/markup-formatters/dist/html.es.js';\n// ...also available as CommonJS module, e.g. dist/html.cjs.js\n```\n\n## Examples\n\n```js\nimport parse from '@emmetio/abbreviation';\nimport Profile from '@emmetio/output-profile';\nimport format from '@emmetio/markup-formatters';\n\n// parse abbreviation first\nconst abbr = parse('ul>li.item*3>img');\n\n// output as HTML\nconst htmlProfile = new Profile({\n\tcompactBooleanAttributes: true\n});\nconsole.log(format(abbr, htmlProfile, 'html'));\n\n// output as XML\nconst xmlProfile = new Profile({\n\tselfClosingStyle: 'xml',\n\tinlineBreak: 0\n});\nconsole.log(format(abbr, xmlProfile, 'html'));\n\n// output as Slim\nconsole.log(format(abbr, new Profile(), 'slim'));\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/emmetio/markup-formatters.git"
  },
  "scripts": {
    "build": "./build.sh",
    "prepublish": "npm run test && npm run build",
    "test": "mocha"
  },
  "version": "0.3.3"
}
