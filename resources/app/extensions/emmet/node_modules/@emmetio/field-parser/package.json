{
  "_args": [
    [
      {
        "raw": "@emmetio/field-parser@https://registry.npmjs.org/@emmetio/field-parser/-/field-parser-0.3.0.tgz",
        "scope": "@emmetio",
        "escapedName": "@emmetio%2ffield-parser",
        "name": "@emmetio/field-parser",
        "rawSpec": "https://registry.npmjs.org/@emmetio/field-parser/-/field-parser-0.3.0.tgz",
        "spec": "https://registry.npmjs.org/@emmetio/field-parser/-/field-parser-0.3.0.tgz",
        "type": "remote"
      },
      "C:\\dev\\vscode\\extensions\\emmet"
    ]
  ],
  "_from": "@emmetio/field-parser@>=0.3.0 <0.4.0",
  "_id": "@emmetio/field-parser@0.3.0",
  "_inCache": true,
  "_location": "/@emmetio/field-parser",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@emmetio/field-parser@https://registry.npmjs.org/@emmetio/field-parser/-/field-parser-0.3.0.tgz",
    "scope": "@emmetio",
    "escapedName": "@emmetio%2ffield-parser",
    "name": "@emmetio/field-parser",
    "rawSpec": "https://registry.npmjs.org/@emmetio/field-parser/-/field-parser-0.3.0.tgz",
    "spec": "https://registry.npmjs.org/@emmetio/field-parser/-/field-parser-0.3.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/@emmetio/markup-formatters",
    "/@emmetio/output-renderer",
    "/@emmetio/stylesheet-formatters"
  ],
  "_resolved": "https://registry.npmjs.org/@emmetio/field-parser/-/field-parser-0.3.0.tgz",
  "_shasum": "7a7cf51c399aea7bae455e0fcf3eb328f8c0c215",
  "_shrinkwrap": null,
  "_spec": "@emmetio/field-parser@https://registry.npmjs.org/@emmetio/field-parser/-/field-parser-0.3.0.tgz",
  "_where": "C:\\dev\\vscode\\extensions\\emmet",
  "author": {
    "name": "Sergey Chikuyonok",
    "email": "serge.che@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/emmetio/field-parser/issues"
  },
  "dependencies": {
    "@emmetio/stream-reader": "^2.0.0",
    "@emmetio/stream-reader-utils": "^0.1.0"
  },
  "description": "Parses snippet fields (aka tab-stops) like `${1:foo}` in given string",
  "devDependencies": {
    "babel-plugin-transform-es2015-modules-commonjs": "^6.18.0",
    "babel-register": "^6.18.0",
    "mocha": "^3.1.2",
    "rollup": "^0.41.1"
  },
  "homepage": "https://github.com/emmetio/field-parser#readme",
  "keywords": [
    "emmet",
    "field",
    "tabstop"
  ],
  "license": "MIT",
  "main": "dist/field-parser.cjs.js",
  "module": "dist/field-parser.es.js",
  "name": "@emmetio/field-parser",
  "optionalDependencies": {},
  "readme": "# Fields (tab-stops) parser\n\nParses snippet fields (aka *tab-stops*) like `${1:foo}` in given string and produces a model that contains clean string without fields and list of fields locations.\n\n## Usage example\n\n```js\nimport parse from '@emmetio/field-parser';\n\nconst fieldModel = parse('foo $0 ${1:bar} ${2}${1}');\n\nconsole.log(fieldModel.string);\n// outputs \"foo  bar \"\n\n// `.fields` is array of `{index, location, length}` fields\nconsole.log(fieldModel.fields);\n// outputs:\n// {index: 0, location: 4, length: 0}\n// {index: 1, location: 5, length: 3}\n// {index: 2, location: 9, length: 0}\n// {index: 1, location: 9, length: 0}\n```\n\nYou can also mark string with fields:\n\n```js\nimport { mark } from '@emmetio/field-parser';\n\nconst marked = mark('foo bar', [\n    {index: 1, location: 0, length: 3},\n    {index: 5, location: 4, length: 3},\n]);\n\nconsole.log(marked); // ${1:foo} ${5:bar}\n```\n\n...or parse string and then use built-it `mark` method:\n\n```js\nimport parse from '@emmetio/field-parser';\n\nconst fieldModel = parse('foo $0 ${1:bar} ${2}${1}');\nfieldModel.forEach(field => field.index += 100);\n\nconsole.log(fieldModel.mark()); // foo $100 ${101:bar} ${102}${101}\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/emmetio/field-parser.git"
  },
  "scripts": {
    "build": "rollup -c",
    "prepublish": "npm run test && npm run build",
    "test": "mocha"
  },
  "version": "0.3.0"
}
