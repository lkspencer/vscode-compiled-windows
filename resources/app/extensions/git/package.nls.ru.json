{
	"command.clone": "Клонировать",
	"command.init": "Инициализировать репозиторий",
	"command.close": "Close Repository",
	"command.refresh": "Обновить",
	"command.openChange": "Открыть изменения",
	"command.openFile": "Открыть файл",
	"command.openHEADFile": "Открыть файл (заголовок)",
	"command.stage": "Хранить промежуточные изменения",
	"command.stageAll": "Хранить все промежуточные изменения",
	"command.stageSelectedRanges": "Разместить выбранные диапазоны",
	"command.revertSelectedRanges": "Отменить выбранные диапазоны",
	"command.unstage": "Отменить хранение промежуточных изменений",
	"command.unstageAll": "Отменить хранение всех промежуточных изменений",
	"command.unstageSelectedRanges": "Отменить размещение выбранных диапазонов",
	"command.clean": "Отменить изменения",
	"command.cleanAll": "Отменить все изменения",
	"command.commit": "Commit",
	"command.commitStaged": "Зафиксировать промежуточно сохраненные изменения",
	"command.commitStagedSigned": "Зафиксировать промежуточные элементы (завершено)",
	"command.commitStagedAmend": "Commit Staged (Amend)",
	"command.commitAll": "Зафиксировать все",
	"command.commitAllSigned": "Зафиксировать все (завершено)",
	"command.commitAllAmend": "Commit All (Amend)",
	"command.undoCommit": "Отменить последнюю фиксацию",
	"command.checkout": "Извлечь в...",
	"command.branch": "Создать ветвь...",
	"command.deleteBranch": "Удалить ветвь...",
	"command.merge": "Объединить ветвь...",
	"command.createTag": "Create Tag",
	"command.pull": "Получить",
	"command.pullRebase": "Получить (переместить изменения из одной ветви в другую)",
	"command.pullFrom": "Загрузить с...",
	"command.push": "Отправить",
	"command.pushTo": "Отправить в:",
	"command.pushWithTags": "Push With Tags",
	"command.sync": "Синхронизация",
	"command.publish": "Опубликовать ветвь",
	"command.showOutput": "Показать выходные данные GIT",
	"command.ignore": "Добавить файл в .gitignore",
	"command.stash": "Stash",
	"command.stashPop": "Pop Stash...",
	"command.stashPopLatest": "Pop Latest Stash",
	"config.enabled": "Включен ли GIT",
	"config.path": "Путь к исполняемому файлу GIT",
	"config.autorefresh": "Включено ли автоматическое обновление",
	"config.autofetch": "Включено ли автоматическое получение",
	"config.enableLongCommitWarning": "Следует ли предупреждать о длинных сообщениях о фиксации",
	"config.confirmSync": "Подтвердите синхронизацию репозиториев GIT.",
	"config.countBadge": "\nУправляет счетчиком Git. При указании значения \"all\" подсчитываются все изменения, при указании значения \"tracked\" — только отслеживаемые изменения, при указании значения \"off\" счетчик отключается.",
	"config.checkoutType": "Определяет типы ветвей, которые выводятся при выборе пункта меню \"Извлечь в...\". При указании значения \"all\" отображаются все ссылки, \"local\" — только локальные ветви, \"tags\" — только теги, а \"remote\" — только удаленные ветви.",
	"config.ignoreLegacyWarning": "Игнорирует предупреждение об устаревшей версии Git",
	"config.ignoreLimitWarning": "Игнорировать предупреждение, когда в репозитории слишком много изменений",
	"config.defaultCloneDirectory": "Расположение по умолчанию, в которое будет клонирован репозиторий Git",
	"config.enableSmartCommit": "Зафиксировать все изменения при отсутствии промежуточных изменений.",
	"config.enableCommitSigning": "Enables commit signing with GPG.",
	"config.discardAllScope": "Controls what changes are discarded by the `Discard all changes` command. `all` discards all changes. `tracked` discards only tracked files. `prompt` shows a prompt dialog every time the action is run."
}